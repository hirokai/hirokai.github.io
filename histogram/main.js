var DataBox=React.createClass({displayName:"DataBox",render:function(){return React.createElement("div",{className:"col-md-1",id:"data-div"},React.createElement("h4",{style:{color:this.props.color}},this.props.name),React.createElement("textarea",{ref:"textarea",className:"data",onChange:this.onChange,onPaste:this.onPaste,defaultValue:this.props.defaultValue.join("\n")}),React.createElement("button",{className:"btn btn-sm btn-danger",onClick:this.onClickClear},"Clear"))},componentDidUpdate:function(){this.refs.textarea.getDOMNode().value=this.props.defaultValue.join("\n")},onClickClear:function(ev){$(ev.nativeEvent.target).siblings("textarea").val(""),this.props.onChange(this.props.id,[])},onChange:function(ev){var values=_.chain($(ev.nativeEvent.target).val().split("\n")).map(function(s){return parseFloat(s)}).compact().value();this.props.onChange(this.props.id,values)}}),App=React.createClass({displayName:"App",getInitialState:function(){const cs=d3.scale.category10(),str=localStorage["HistogramD3-values"],vs=str?JSON.parse(str):this.mkDemoValues(),str2=localStorage["HistogramD3-range"],range=str2?JSON.parse(str2):{xmin:null,xmax:null,numBin:20};return{series:[{id:"dat1",name:"Data 1"},{id:"dat2",name:"Data 2"},{id:"dat3",name:"Data 3"},{id:"dat4",name:"Data 4"}],values:vs,colors:{dat1:cs(0),dat2:cs(1),dat3:cs(2),dat4:cs(3)},normalized:!1,totalWidth:600,totalHeight:500,margin:{top:10,right:30,bottom:30,left:30},xmin:range.xmin,xmax:range.xmax,numBin:range.numBin}},render:function(){return React.createElement("div",null,React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-12"},React.createElement("input",{id:"normalized",type:"checkbox",checked:this.state.normalized,onChange:this.onChangeNormalized}),React.createElement("label",{htmlFor:"normalized"},"Normalize"),React.createElement("br",null),React.createElement("label",{htmlFor:"xmin"},"X min"),React.createElement("input",{id:"xmin",type:"text",defaultValue:this.state.xmin,onBlur:this.onChangeXmin,onKeyDown:this.onKeyDownParams}),React.createElement("label",{htmlFor:"xmax"},"X max"),React.createElement("input",{id:"xmax",type:"text",defaultValue:this.state.xmax,onBlur:this.onChangeXmax,onKeyDown:this.onKeyDownParams}),React.createElement("label",{htmlFor:"xmin"},"# of bins"),React.createElement("input",{id:"numBin",type:"text",defaultValue:this.state.numBin,onBlur:this.onChangeNumBin,onKeyDown:this.onKeyDownParams}),React.createElement("button",{className:"btn btn-xs btn-default",onClick:this.onClickAutoRange},"Auto-calc range"),React.createElement("br",null),React.createElement("button",{className:"btn btn-xs btn-danger",onClick:this.onClickReset},"Reset and load demo data"))),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-md-7"},React.createElement("svg",{id:"graph"})),_.map(this.state.series,function(d){return React.createElement(DataBox,{id:d.id,key:d.id,onChange:this.valuesChanged,defaultValue:this.state.values[d.id]||[],name:d.name,color:this.state.colors[d.id]})}.bind(this))))},mkDemoValues:function(){const f=function(l,m,s){return _.map(d3.range(l).map(d3.random.normal(m,s)),function(v){return Math.round(100*v)/100})};return{dat1:f(1e3,10,2),dat2:f(1e3,15,5),dat3:f(2e3,30,10),dat4:f(3e3,25,8)}},onClickReset:function(){localStorage.removeItem("HistogramD3-values"),localStorage.removeItem("HistogramD3-range"),this.setState({values:this.mkDemoValues()}),this.onClickAutoRange()},onKeyDownParams:function(ev){13==ev.keyCode&&(obj={},obj[ev.target.id]=ev.target.value,this.setState(obj))},onClickAutoRange:function(){var $__0=this.calcRange(),min=$__0[0],max=$__0[1],numBin=$__0[2];this.setState({xmin:min,xmax:max,numBin:numBin}),$("#xmin").val(min),$("#xmax").val(max),$("#numBin").val(numBin)},calcRange:function(){const ignore=.02;var vals=_.sortBy(_.flatten(_.map(this.state.values,function(v){return v})),function(v){return v}),min=vals[Math.floor(vals.length*ignore)],max=vals[Math.floor(.98*vals.length)],digit=Math.floor(Math.log(max-min)/Math.log(10)),tick=Math.pow(10,digit),tick2=10>=(max-min)/tick?tick/2:tick;min=Math.floor(min/tick2)*tick2,max=Math.ceil(max/tick2)*tick2;var numBin=(max-min)/tick2;return[min,max,numBin]},onChangeXmin:function(ev){this.setState({xmin:parseFloat(ev.target.value)||null})},onChangeXmax:function(ev){this.setState({xmax:parseFloat(ev.target.value)||null})},onChangeNumBin:function(ev){this.setState({numBin:parseFloat(ev.target.value)||20})},onChangeNormalized:function(){this.setState({normalized:!this.state.normalized})},valuesChanged:function(id,values){var vs=_.extend({},this.state.values);vs[id]=values,localStorage.setItem("HistogramD3-values",JSON.stringify(vs)),this.setState({values:vs})},width:function(){return this.state.totalWidth-this.state.margin.left-this.state.margin.right},height:function(){return this.state.totalHeight-this.state.margin.top-this.state.margin.bottom},binThreshold:function(){const binWidth=(this.state.xmax-this.state.xmin)/this.state.numBin,r=_.map(_.range(this.state.numBin+1),function(i){return i*binWidth+this.state.xmin}.bind(this));return r},componentDidMount:function(){var values=d3.range(1e3).map(d3.random.bates(10)),x=(d3.format(",.0f"),d3.scale.linear().domain([0,1]).range([30,this.width()])),data=d3.layout.histogram().bins(this.binThreshold())(values),y=d3.scale.linear().domain([0,d3.max(data,function(d){return d.y})]).range([this.height(),0]),xAxis=d3.svg.axis().scale(x).orient("bottom"),svg=d3.select("#graph").attr("width",this.state.totalWidth).attr("height",this.state.totalHeight);this.xAxisObj=svg.append("g").attr("class","x axis").attr("transform","translate(0,"+(this.height()-20)+")"),this.xAxisObj.call(xAxis);var yAxis=d3.svg.axis().scale(y).orient("left");this.yAxisObj=svg.append("g").attr("class","y axis").attr("transform","translate(30,0)").call(yAxis),(null==this.state.xmin||null==this.state.xmax||null==this.state.numBin)&&this.onClickAutoRange(),this.updateGraph()},componentDidUpdate:function(prepProps,prevState){const xminChanged=prevState.xmin!=this.state.xmin,xmaxChanged=prevState.xmax!=this.state.xmax,numBinChanged=prevState.numBin!=this.state.numBin,rangeChanged=xminChanged||xmaxChanged||numBinChanged;rangeChanged&&localStorage.setItem("HistogramD3-range",JSON.stringify({xmin:this.state.xmin,xmax:this.state.xmax,numBin:this.state.numBin})),this.updateGraph(rangeChanged)},x:function(){return d3.scale.linear().domain([this.state.xmin,this.state.xmax]).range([30,this.width()])},y:function(ymax){return d3.scale.linear().domain([0,ymax]).range([this.height()-this.yshift,0])},xAxisObj:null,yAxisObj:null,updateGraph:function(rangeChanged){var self=this,x=(d3.select("#graph"),this.x());const xTickFunc=function(d,i){const nb=self.state.numBin,flag=30>=nb||nb>30&&50>=nb&&i%10==0||nb>50&&100>=nb&&i%20==0||i%100==0;return flag?this.state.xmax>1e5?d3.format(".1e")(self.binThreshold()[i]):d3.format("d")(d):""}.bind(this);var xAxis=d3.svg.axis().scale(x).tickValues(this.binThreshold()).tickFormat(xTickFunc).orient("bottom");const series=_.filter(Object.keys(this.state.values),function(k){return k&&this.state.values[k].length>1}.bind(this)),xmax=this.state.xmax||1e4,xmin=this.state.xmin||0;this.xAxisObj.call(xAxis);var data={};const ymaxs=_.map(series,function(id){const vals=_.sortBy(this.state.values[id],function(v){return v});if(vals.length>0){const vals_filtered=_.filter(vals,function(v){return xmax>(v>xmin)});if(data[id]=d3.layout.histogram().bins(self.binThreshold())(vals_filtered),this.state.normalized){const s=_.reduce(_.map(data[id],function(d){return d.y}),function(a,b){return a+b});_.map(data[id],function(d){d.y/=s})}}return d3.max(data[id],function(d){return d.y})}.bind(this)),ymax=d3.max(ymaxs),y=this.y(ymax);_.map(series,function(id,i){this.drawSeries(series.length,i,id,x,xmin,xmax,data[id],y)}.bind(this));var yAxis=d3.svg.axis().scale(y).orient("left");this.yAxisObj.call(yAxis)},yshift:20,heightFactor:function(){return(this.height()-this.yshift)/this.height()},drawSeries:function(numSeries,idx,id,x,xmin,xmax,data,y){const self=this,widthFactor=.9,svg=d3.select("#graph"),barWidth=(x(data[0].dx)-x(0))/numSeries*widthFactor,barMargin=(x(data[0].dx)-x(0)-barWidth*numSeries)/2,bar=svg.selectAll(".bar-"+idx).data(data);bar.enter().append("g").attr("class","bar bar-"+idx).attr("transform",function(d){return"translate("+(x(d.x)+barWidth*idx+barMargin)+","+(this.height()-self.yshift)+")"}.bind(this)).append("rect").attr("x",1).attr("width",barWidth).style("fill",self.state.colors[id]).attr("height",0),bar.exit().remove(),bar.transition().duration(500).attr("transform",function(d){return"translate("+(x(d.x)+barWidth*idx+barMargin)+","+y(d.y)+")"});const rectHeight=function(d){return self.height()-self.yshift-y(d.y)};bar.select("rect").transition().duration(500).style("fill",self.state.colors[id]).attr("width",barWidth).attr("height",rectHeight);const formatCount=d3.format(this.state.normalized?",.3f":",.0f");bar.select("text").remove(),bar.append("text").attr("dy",".75em").attr("y",function(d){return rectHeight(d)>=30?10:-10}).attr("x",barWidth/2).attr("text-anchor","middle").text(function(d){return d.y>0?formatCount(d.y):""})}});React.render(React.createElement(App,null),document.getElementById("app-container")),$(function(){});